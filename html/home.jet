<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer"/>

    <title>Home</title>
    <style>
        .chatbox{
            outline:1px solid silver;
            min-height: 160px;
            padding:0.5em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-3">David David OSA</h1>
                <hr/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off"/>
                </div>
                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off"/>
                </div>
                
                <hr/>

                <a href="javascript:void(0)" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

                <input type="hidden" name="action" id="action"/>

                <div id="status" class="mt-2 float-end">
                
                </div>

                <div id="output" class="chatbox mt-4"></div>
            </div>
            <div class="col-md-4">
                <h3>Who's online</h3>
                <ul id="online-users" class="mt-7"> 
                
                </ul>
            </div>
        </div>
    </div>
</body>

<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
    let socket = null;
    let output = document.getElementById("output")


    window.onbeforeunload = function() {
        console.log("Leaving");
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData))
    }

    document.addEventListener("DOMContentLoaded", function () {
        socket = new WebSocket("ws://127.0.0.1:8080/ws");

        const offline = `<span class="badge bg-danger">Not Connected</span>`
        const online = `<span class="badge bg-success">Connected</span>`
        let statusDiv = document.getElementById("status")

        socket.onopen = () => {
            console.log("Successfully connected");
            statusDiv.innerHTML = online
        }

        socket.onclose = () => {
            console.log("connection closed");
            statusDiv.innerHTML = offline
        }

        socket.onerror = error => {
            console.log("there was an error");
        }

        socket.onmessage = msg => {

            let data = JSON.parse(msg.data);
            console.log("Action is", data.action);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online-users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);
                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (item) {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        })
                    }
                    break;
                case "broadcast":
                    output.innerHTML = output.innerHTML + data.message + "<br/>"
                    break;
            }

        }
        let userInput = document.getElementById("username");
        userInput.addEventListener("change", function () {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

        document.getElementById("message").addEventListener("keydown", function(e) {
            if(e.code === "Enter"){
                if(!socket){
                    console.log("no connection")
                    return false
                }
                e.preventDefault()
                e.stopPropagation()
                if(document.getElementById("username").value === "" || document.getElementById("message").value === "") {
                    errorMessage("type username and message")
                    return false
                }else{
                    sendMessage()
                }
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function(){
            if(document.getElementById("username").value === "" || document.getElementById("message").value === "") {
                errorMessage("type username and message")
                return false
            }else{
                sendMessage()
            }
        })
    })

    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast"
        jsonData["username"] = document.getElementById("username").value
        jsonData["message"] = document.getElementById("message").value
        socket.send(JSON.stringify(jsonData))
        document.getElementById("message").value = ""
    }


    function errorMessage(msg){
        notie.alert({
            type:'error',
            text:msg
        })
    }
</script>

</html>